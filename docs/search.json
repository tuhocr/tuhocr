[{"path":"/articles/filter_faostat.html","id":"quy-trình-trích-xuất-dữ-liệu-từ-faostat","dir":"Articles","previous_headings":"","what":"Quy trình trích xuất dữ liệu từ FAOSTAT","title":"Hướng dẫn trích xuất dữ liệu nông sản từ FAOSTAT","text":"Thông thường để trích xuất dữ liệu nông sản từ FAOSTAT, bạn sẽ lên trực tiếp trang web https://www.fao.org/faostat/en/ và tải về dataset liên quan cũng như sử dụng các công cụ lọc dữ liệu và vẽ đồ thị được cung cấp sẵn trên website. Để thực hiện việc này nhanh gọn trong R thì bạn cần các bước sau: 1/ Bạn sử dụng package FAOSTAT để download tự động dataset R về máy tính. download dataset mã QCL dành cho nông sản download file csv chứa danh sách quốc gia và vùng lãnh thổ 2/ Import 2 file ở trên vào R và sử dụng function để trích xuất dữ liệu. Khi bạn download package tuhocr về máy tính thì mình đã để sẵn 2 file crop_production_all_data.rds và FAOSTAT_data_3-21-2023.csv ở thời điểm tháng 3/2023 rồi, vì vậy bạn có thể dùng các file này để trích xuất dữ liệu. Trong ví dụ minh họa này mình dùng function filter_faostat() để trích xuất ra 10 quốc gia sản xuất cà phê nhiều nhất trên thế giới năm 2021. Tham số rank_filter và year_filter được thiết kế để lọc dữ liệu theo thứ hạng và theo các mốc thời gian khác nhau tùy vào nhu cầu phân tích dữ liệu. 3/ Nếu bạn muốn trích xuất toàn bộ các quốc gia sản xuất nông sản thì ta dùng cách sau` Trong ví dụ minh họa này mình dùng function extract_faostat() để trích xuất toàn bộ các quốc gia sản xuất đậu nành trên thế giới theo tất cả các năm trong bộ dataset này. Trên cơ sở dataset thu được bạn sẽ lọc tiếp ra các thông tin liên quan đến nhu cầu xử lý dữ liệu và vẽ đồ thị.","code":"# install.packages(\"FAOSTAT\") # library(FAOSTAT)  # search_dataset(dataset_code = \"QCL\", #                latest = TRUE,  #                reset_cache = FALSE) #  # crop_production <- get_faostat_bulk(code = \"QCL\",  #                                     data_folder = \"./\")  # bạn có thể lưu file này ra dạng .RDS để sau này đọc lại từ R sẽ nhanh hơn, # không cần download lại từ FAOSTAT.  # saveRDS(crop_production, \"crop_production.rds\")  # crop_production <- readRDS(\"crop_production.rds\") # chọn Country/Region ở link này https://www.fao.org/faostat/en/#definitions # df_1 <- readRDS(\"crop_production.rds\") # df_2 <- read.csv(\"FAOSTAT_data_2023.csv\")  crop_production <- system.file(\"extdata\",                                \"crop_production_all_data.rds\",                                package = \"tuhocr\")  df_1 <- readRDS(crop_production)  FAOSTAT_data_2023 <- system.file(\"extdata\",                                  \"FAOSTAT_data_3-21-2023.csv\",                                   package = \"tuhocr\")  df_2 <- read.csv(FAOSTAT_data_2023)  library(tuhocr)  # Thực hiện dòng lệnh sẽ thu được danh sách các quốc gia # sản xuất cà phê trên thế giới được sắp xếp theo # thứ hạng và năm.  coffee_data <- filter_faostat(data_rds = df_1, data_region = df_2, item_filter = \"Coffee, green\", rank_filter = 1:10, year_filter = c(2021))  coffee_data #>    rank      area          item year production area_harvested yield #> 1     1    Brazil Coffee, green 2021  2993780.0        1836741  1.63 #> 2     2  Viet Nam Coffee, green 2021  1845033.0         653192  2.82 #> 3     3 Indonesia Coffee, green 2021   765415.0        1249615  0.61 #> 4     4  Colombia Coffee, green 2021   560340.0         840112  0.67 #> 5     5  Ethiopia Coffee, green 2021   456000.0         685294  0.67 #> 6     6  Honduras Coffee, green 2021   400674.4         336318  1.19 #> 7     7    Uganda Coffee, green 2021   374760.0         692553  0.54 #> 8     8      Peru Coffee, green 2021   365582.1         454717  0.80 #> 9     9     India Coffee, green 2021   334000.0         422924  0.79 #> 10   10 Guatemala Coffee, green 2021   226700.0         363875  0.62 str(coffee_data) #> 'data.frame':    10 obs. of  7 variables: #>  $ rank          : chr  \"1\" \"2\" \"3\" \"4\" ... #>  $ area          : Factor w/ 81 levels \"Mauritius\",\"Saint Lucia\",..: 81 80 79 78 77 76 75 74 73 72 #>  $ item          : chr  \"Coffee, green\" \"Coffee, green\" \"Coffee, green\" \"Coffee, green\" ... #>  $ year          : int  2021 2021 2021 2021 2021 2021 2021 2021 2021 2021 #>  $ production    : num  2993780 1845033 765415 560340 456000 ... #>  $ area_harvested: num  1836741 653192 1249615 840112 685294 ... #>  $ yield         : num  1.63 2.82 0.61 0.67 0.67 1.19 0.54 0.8 0.79 0.62 soya_data <- extract_faostat(input_rds = df_1,                              input_region = df_2,                              input_item = \"Soya beans\")  head(soya_data, n = 15) #>                        area       item year production area_harvested yield #> 1  United States of America Soya beans 2021  120707230       34937700  3.45 #> 2  United States of America Soya beans 2020  114748940       33428610  3.43 #> 3  United States of America Soya beans 2019   96667090       30327060  3.19 #> 4  United States of America Soya beans 2018  120514490       35448420  3.40 #> 5  United States of America Soya beans 2017  120064970       36236750  3.31 #> 6  United States of America Soya beans 2016  116931500       33470290  3.49 #> 7  United States of America Soya beans 2015  106953940       33123470  3.23 #> 8  United States of America Soya beans 2014  106877870       33423750  3.20 #> 9  United States of America Soya beans 2013   91389350       30858830  2.96 #> 10 United States of America Soya beans 2012   82790870       30814720  2.69 #> 11 United States of America Soya beans 2011   84291400       29856410  2.82 #> 12 United States of America Soya beans 2010   90663290       31003300  2.92 #> 13 United States of America Soya beans 2009   91469550       30906980  2.96 #> 14 United States of America Soya beans 2008   80748700       30222650  2.67 #> 15 United States of America Soya beans 2007   72859180       25959240  2.81"},{"path":"/articles/filter_faostat.html","id":"danh-sách-cây-trồng","dir":"Articles","previous_headings":"","what":"Danh sách cây trồng","title":"Hướng dẫn trích xuất dữ liệu nông sản từ FAOSTAT","text":"Dataset của FAOSTAT bao gồm các loại nông sản nhóm trồng trọt và chăn nuôi. Các function extract_faostat() và filter_faostat() được thiết kế để lọc dữ liệu trong nhóm trồng trọt (là các nông sản được ghi nhận sản lượng và diện tích canh tác). Đây là danh sách nhóm nông sản cây trồng giúp bạn tham khảo khi cần trích xuất loại cây trồng cụ thể.","code":"crop_full <- df_1 ok <- as.data.frame(table(crop_full$item, crop_full$element)) ok_1 <- ok |> subset(Freq != 0) ok_2 <- reshape(data = ok_1,                 idvar = c(\"Var1\"),                 v.names = \"Freq\",                 timevar = \"Var2\",                 direction = \"wide\") ok_2[!is.na(ok_2$Freq.area_harvested) & !is.na(ok_2$Freq.production), ] -> ok_3 as.character(ok_3$Var1) -> crop_item crop_item #>   [1] \"Abaca, manila hemp, raw\"                                                   #>   [2] \"Agave fibres, raw, n.e.c.\"                                                 #>   [3] \"Almonds, in shell\"                                                         #>   [4] \"Anise, badian, coriander, cumin, caraway, fennel and juniper berries, raw\" #>   [5] \"Apples\"                                                                    #>   [6] \"Apricots\"                                                                  #>   [7] \"Areca nuts\"                                                                #>   [8] \"Artichokes\"                                                                #>   [9] \"Asparagus\"                                                                 #>  [10] \"Avocados\"                                                                  #>  [11] \"Bambara beans, dry\"                                                        #>  [12] \"Bananas\"                                                                   #>  [13] \"Barley\"                                                                    #>  [14] \"Beans, dry\"                                                                #>  [15] \"Blueberries\"                                                               #>  [16] \"Brazil nuts, in shell\"                                                     #>  [17] \"Broad beans and horse beans, dry\"                                          #>  [18] \"Broad beans and horse beans, green\"                                        #>  [19] \"Buckwheat\"                                                                 #>  [20] \"Cabbages\"                                                                  #>  [21] \"Canary seed\"                                                               #>  [22] \"Cantaloupes and other melons\"                                              #>  [23] \"Carrots and turnips\"                                                       #>  [24] \"Cashew nuts, in shell\"                                                     #>  [25] \"Cashewapple\"                                                               #>  [26] \"Cassava leaves\"                                                            #>  [27] \"Cassava, fresh\"                                                            #>  [28] \"Castor oil seeds\"                                                          #>  [29] \"Cauliflowers and broccoli\"                                                 #>  [30] \"Cereals n.e.c.\"                                                            #>  [31] \"Cereals, primary\"                                                          #>  [32] \"Cherries\"                                                                  #>  [33] \"Chestnuts, in shell\"                                                       #>  [34] \"Chick peas, dry\"                                                           #>  [35] \"Chicory roots\"                                                             #>  [36] \"Chillies and peppers, dry (Capsicum spp., Pimenta spp.), raw\"              #>  [37] \"Chillies and peppers, green (Capsicum spp. and Pimenta spp.)\"              #>  [38] \"Cinnamon and cinnamon-tree flowers, raw\"                                   #>  [39] \"Citrus Fruit, Total\"                                                       #>  [40] \"Cloves (whole stems), raw\"                                                 #>  [41] \"Cocoa beans\"                                                               #>  [42] \"Coconuts, in shell\"                                                        #>  [43] \"Coffee, green\"                                                             #>  [44] \"Coir, raw\"                                                                 #>  [45] \"Cow peas, dry\"                                                             #>  [46] \"Cranberries\"                                                               #>  [47] \"Cucumbers and gherkins\"                                                    #>  [48] \"Currants\"                                                                  #>  [49] \"Dates\"                                                                     #>  [50] \"Edible roots and tubers with high starch or inulin content, n.e.c., fresh\" #>  [51] \"Eggplants (aubergines)\"                                                    #>  [52] \"Fibre Crops, Fibre Equivalent\"                                             #>  [53] \"Figs\"                                                                      #>  [54] \"Flax, processed but not spun\"                                              #>  [55] \"Fonio\"                                                                     #>  [56] \"Fruit Primary\"                                                             #>  [57] \"Ginger, raw\"                                                               #>  [58] \"Gooseberries\"                                                              #>  [59] \"Grapes\"                                                                    #>  [60] \"Green corn (maize)\"                                                        #>  [61] \"Green garlic\"                                                              #>  [62] \"Groundnuts, excluding shelled\"                                             #>  [63] \"Hazelnuts, in shell\"                                                       #>  [64] \"Hempseed\"                                                                  #>  [65] \"Hop cones\"                                                                 #>  [66] \"Jojoba seeds\"                                                              #>  [67] \"Jute, raw or retted\"                                                       #>  [68] \"Kapok fruit\"                                                               #>  [69] \"Karite nuts (sheanuts)\"                                                    #>  [70] \"Kenaf, and other textile bast fibres, raw or retted\"                       #>  [71] \"Kiwi fruit\"                                                                #>  [72] \"Kola nuts\"                                                                 #>  [73] \"Leeks and other alliaceous vegetables\"                                     #>  [74] \"Lemons and limes\"                                                          #>  [75] \"Lentils, dry\"                                                              #>  [76] \"Lettuce and chicory\"                                                       #>  [77] \"Linseed\"                                                                   #>  [78] \"Locust beans (carobs)\"                                                     #>  [79] \"Lupins\"                                                                    #>  [80] \"Maize (corn)\"                                                              #>  [81] \"Mangoes, guavas and mangosteens\"                                           #>  [82] \"Maté leaves\"                                                               #>  [83] \"Melonseed\"                                                                 #>  [84] \"Millet\"                                                                    #>  [85] \"Mixed grain\"                                                               #>  [86] \"Mushrooms and truffles\"                                                    #>  [87] \"Mustard seed\"                                                              #>  [88] \"Natural rubber in primary forms\"                                           #>  [89] \"Nutmeg, mace, cardamoms, raw\"                                              #>  [90] \"Oats\"                                                                      #>  [91] \"Oil palm fruit\"                                                            #>  [92] \"Oilcrops, Cake Equivalent\"                                                 #>  [93] \"Oilcrops, Oil Equivalent\"                                                  #>  [94] \"Okra\"                                                                      #>  [95] \"Olives\"                                                                    #>  [96] \"Onions and shallots, dry (excluding dehydrated)\"                           #>  [97] \"Onions and shallots, green\"                                                #>  [98] \"Oranges\"                                                                   #>  [99] \"Other beans, green\"                                                        #> [100] \"Other berries and fruits of the genus vaccinium n.e.c.\"                    #> [101] \"Other citrus fruit, n.e.c.\"                                                #> [102] \"Other fibre crops, raw, n.e.c.\"                                            #> [103] \"Other fruits, n.e.c.\"                                                      #> [104] \"Other nuts (excluding wild edible nuts and groundnuts), in shell, n.e.c.\"  #> [105] \"Other oil seeds, n.e.c.\"                                                   #> [106] \"Other pome fruits\"                                                         #> [107] \"Other pulses n.e.c.\"                                                       #> [108] \"Other stimulant, spice and aromatic crops, n.e.c.\"                         #> [109] \"Other stone fruits\"                                                        #> [110] \"Other sugar crops n.e.c.\"                                                  #> [111] \"Other tropical fruits, n.e.c.\"                                             #> [112] \"Other vegetables, fresh n.e.c.\"                                            #> [113] \"Papayas\"                                                                   #> [114] \"Peaches and nectarines\"                                                    #> [115] \"Pears\"                                                                     #> [116] \"Peas, dry\"                                                                 #> [117] \"Peas, green\"                                                               #> [118] \"Pepper (Piper spp.), raw\"                                                  #> [119] \"Peppermint, spearmint\"                                                     #> [120] \"Persimmons\"                                                                #> [121] \"Pigeon peas, dry\"                                                          #> [122] \"Pineapples\"                                                                #> [123] \"Pistachios, in shell\"                                                      #> [124] \"Plantains and cooking bananas\"                                             #> [125] \"Plums and sloes\"                                                           #> [126] \"Pomelos and grapefruits\"                                                   #> [127] \"Poppy seed\"                                                                #> [128] \"Potatoes\"                                                                  #> [129] \"Pulses, Total\"                                                             #> [130] \"Pumpkins, squash and gourds\"                                               #> [131] \"Pyrethrum, dried flowers\"                                                  #> [132] \"Quinces\"                                                                   #> [133] \"Quinoa\"                                                                    #> [134] \"Ramie, raw or retted\"                                                      #> [135] \"Rape or colza seed\"                                                        #> [136] \"Raspberries\"                                                               #> [137] \"Rice\"                                                                      #> [138] \"Roots and Tubers, Total\"                                                   #> [139] \"Rye\"                                                                       #> [140] \"Safflower seed\"                                                            #> [141] \"Seed cotton, unginned\"                                                     #> [142] \"Sesame seed\"                                                               #> [143] \"Sisal, raw\"                                                                #> [144] \"Sorghum\"                                                                   #> [145] \"Sour cherries\"                                                             #> [146] \"Soya beans\"                                                                #> [147] \"Spinach\"                                                                   #> [148] \"Strawberries\"                                                              #> [149] \"String beans\"                                                              #> [150] \"Sugar beet\"                                                                #> [151] \"Sugar cane\"                                                                #> [152] \"Sugar Crops Primary\"                                                       #> [153] \"Sunflower seed\"                                                            #> [154] \"Sweet potatoes\"                                                            #> [155] \"Tallowtree seeds\"                                                          #> [156] \"Tangerines, mandarins, clementines\"                                        #> [157] \"Taro\"                                                                      #> [158] \"Tea leaves\"                                                                #> [159] \"Tomatoes\"                                                                  #> [160] \"Treenuts, Total\"                                                           #> [161] \"Triticale\"                                                                 #> [162] \"True hemp, raw or retted\"                                                  #> [163] \"Tung nuts\"                                                                 #> [164] \"Unmanufactured tobacco\"                                                    #> [165] \"Vanilla, raw\"                                                              #> [166] \"Vegetables Primary\"                                                        #> [167] \"Vetches\"                                                                   #> [168] \"Walnuts, in shell\"                                                         #> [169] \"Watermelons\"                                                               #> [170] \"Wheat\"                                                                     #> [171] \"Yams\"                                                                      #> [172] \"Yautia\""},{"path":"/articles/filter_faostat.html","id":"ứng-dụng-để-vẽ-đồ-thị-nhanh-chóng","dir":"Articles","previous_headings":"","what":"Ứng dụng để vẽ đồ thị nhanh chóng","title":"Hướng dẫn trích xuất dữ liệu nông sản từ FAOSTAT","text":"","code":"coffee_data <- filter_faostat(data_rds = df_1,                               data_region = df_2,                               item_filter = \"Coffee, green\",                               rank_filter = 1:10,                               year_filter = 2021)  ## vì kết quả trả về ở dạng factor cho danh sách các quốc gia ## bạn cần reset lại giá trị factor này để reorder lại theo đúng ý bạn muốn ## giúp việc vẽ đồ thị được thuận lợi.  coffee_data$area <- as.character(coffee_data$area)  coffee_data$area <- reorder(coffee_data$area, coffee_data$production, decreasing = TRUE)  coffee_data$production <- coffee_data$production / 1000000  label <- coffee_data$production  names(label) <- coffee_data$area  round(label, digits = 3) -> label  par(mar = c(4, 5, 3, 3)) par(cex = 0.8) par(font.axis = 2) par(font.lab = 2)  b <- barplot(production ~ area,              coffee_data,              xaxs = \"i\",              yaxs = \"i\",              las = 1,              xlim = c(0, 10),              ylim = c(0, 4),              width = c(0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5),              space = c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1),              beside = TRUE,              horiz = FALSE,              xlab = \"\",              ylab = \"Sản lượng (triệu tấn)\",              col = terrain.colors(n = 10),              border = \"black\")  text(b, label + 0.2, label, font = 2, col = \"black\")  title(main = \"Top 10 quốc gia sản xuất cà phê trên thế giới năm 2021 \")"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Duc Nguyen. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Nguyen D (2023). tuhocr: Functions daily tasks. R package version 0.1.3, https://tuhocr.github.io/.","code":"@Manual{,   title = {tuhocr: Functions for daily tasks},   author = {Duc Nguyen},   year = {2023},   note = {R package version 0.1.3},   url = {https://tuhocr.github.io/}, }"},{"path":"/index.html","id":"tuhocr-","dir":"","previous_headings":"","what":"Functions for daily tasks ","title":"Functions for daily tasks ","text":"Package này tập hợp các function giúp giải quyết công việc xử lý dữ liệu thường ngày. Để ứng dụng R có hiệu quả vào công việc, thân mời bạn tham gia khóa học R ở www.tuhocr.com giúp trang bị kiến thức R vững chắc.","code":""},{"path":"/index.html","id":"hướng-dẫn-cài-đặt","dir":"","previous_headings":"","what":"Hướng dẫn cài đặt","title":"Functions for daily tasks ","text":"Cài đặt package tuhocr theo cách sau. Lưu ý: Thông thường khi cài đặt package thì R sẽ đề nghị bạn update các package khác có liên quan. Để đảm bảo hệ thống ổn định thì bạn không cần thiết phải update nhé.","code":"# install.packages(\"devtools\") devtools::install_github(\"tuhocr/tuhocr\", force = TRUE)"},{"path":[]},{"path":"/index.html","id":"function-dùng-làm-sạch-dataset","dir":"","previous_headings":"Các chức năng chính","what":"Function dùng làm sạch dataset","title":"Functions for daily tasks ","text":"Trong package này có function clean_spss() giúp import file SPSS (.sav) vào trong R. Sau đó các cột có label sẽ được chuyển thành factor, cũng như làm sạch các thông tin liên quan đến SPSS để ta có data frame sạch. Tương tự cho function clean_stata().","code":"# Các bạn download các file SPSS (.sav) example này về. # http://spss.allenandunwin.com.s3-website-ap-southeast-2.amazonaws.com/data-files.html # Thực hiện dòng lệnh. Ta thu được data frame sạch để phân tích dữ liệu. library(tuhocr) data <- clean_spss(\"https://tuhocr.netlify.app/experim.sav\") head(data[, 1:6]) #>   id  sex age               group fost1 confid1 #> 1  4 male  23 confidence building    50      15 #> 2 10 male  21 confidence building    47      14 #> 3  9 male  25        maths skills    44      12 #> 4  3 male  30        maths skills    47      11 #> 5 12 male  45 confidence building    46      16 #> 6 11 male  22        maths skills    39      13 str(data) #> 'data.frame':    30 obs. of  18 variables: #>  $ id      : num  4 10 9 3 12 11 6 5 8 13 ... #>  $ sex     : Factor w/ 2 levels \"male\",\"female\": 1 1 1 1 1 1 1 1 1 1 ... #>  $ age     : num  23 21 25 30 45 22 22 26 23 21 ... #>  $ group   : Factor w/ 2 levels \"maths skills\",..: 2 2 1 1 2 1 2 1 2 1 ... #>  $ fost1   : num  50 47 44 47 46 39 32 44 40 47 ... #>  $ confid1 : num  15 14 12 11 16 13 21 17 22 20 ... #>  $ depress1: num  44 42 40 43 44 43 37 46 37 50 ... #>  $ fost2   : num  48 45 39 42 45 40 33 37 40 45 ... #>  $ confid2 : num  16 15 18 16 16 20 22 20 23 25 ... #>  $ depress2: num  44 42 40 43 45 42 36 47 37 48 ... #>  $ fost3   : num  45 44 36 41 43 39 32 32 40 46 ... #>  $ confid3 : num  14 18 19 20 20 22 23 26 26 27 ... #>  $ depress3: num  40 40 38 43 43 38 35 42 35 46 ... #>  $ exam    : num  52 55 58 60 58 62 59 70 60 70 ... #>  $ mah_1   : num  0.57 1.659 3.54 2.454 0.944 ... #>  $ DepT1gp2: Factor w/ 2 levels \"not depressed\",..: 1 1 1 1 1 1 1 2 1 2 ... #>  $ DepT2Gp2: Factor w/ 2 levels \"not depressed\",..: 1 1 1 1 2 1 1 2 1 2 ... #>  $ DepT3gp2: Factor w/ 2 levels \"not depressed\",..: 1 1 1 1 1 1 1 1 1 2 ..."},{"path":"/index.html","id":"làm-bài-tập-r","dir":"","previous_headings":"Các chức năng chính","what":"Làm bài tập R","title":"Functions for daily tasks ","text":"Mình định kỳ có upload các bài tập củng cố kiến thức R ở chuyên mục Bài Tập R. Các file này chạy online trên server RStudio (Shiny app) tuy nhiên đôi khi sẽ bị chậm, vì vậy bạn có thể render local trên máy tính bằng dòng lệnh learnr::run_tutorial(name = \"hack1\", package = \"tuhocr\") với hack1 là codename tương ứng của từng bài tập.","code":""},{"path":"/index.html","id":"trích-xuất-dữ-liệu-từ-faostat","dir":"","previous_headings":"Các chức năng chính","what":"Trích xuất dữ liệu từ FAOSTAT","title":"Functions for daily tasks ","text":"Áp dụng function extract_faostat() và filter_faostat() để trích xuất dữ liệu nông sản từ FAOSTAT theo thứ hạng và thời gian. Hướng dẫn chi tiết","code":""},{"path":[]},{"path":"/index.html","id":"bản-quyền","dir":"","previous_headings":"Thông tin package","what":"Bản quyền","title":"Functions for daily tasks ","text":"Các function trong package tuhocr được viết theo giấy phép GNU General Public License (version 3) cho phép phân phối hoàn toàn miễn phí đến người sử dụng. Ở vai người dùng, bạn được quyền chỉnh sửa function và tái phân phối lại hoàn toàn tự . Mặc dù mình (Duc Nguyen) đã kiểm tra rất kỹ hoạt động của package để đảm bảo kết quả chính xác, tuy nhiên vẫn sẽ có sai sót, có gì bạn email báo lỗi trực tiếp cho mình qua email để kịp thời chỉnh sửa lại nhé. Chỉ là bạn cần nắm rõ: Bởi vì package này sử dụng giấy phép GNU nên việc áp dụng các function trong package tuhocr vào công việc của bạn nếu có sai sót gì phát sinh thì hoàn toàn là bạn. Không có bất kỳ bảo hành hay chịu trách nhiệm gì về phía mình (là người viết package này).","code":"# This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. # This is free software, and you are welcome to redistribute it # under certain conditions."},{"path":"/index.html","id":"trích-dẫn","dir":"","previous_headings":"Thông tin package","what":"Trích dẫn","title":"Functions for daily tasks ","text":"","code":"print(citation(\"tuhocr\"), style = \"text\") #> Nguyen D (2023). _tuhocr: Functions for daily tasks_. R package version #> 0.1.3, <https://tuhocr.github.io/>."},{"path":"/index.html","id":"liên-hệ","dir":"","previous_headings":"Thông tin package","what":"Liên hệ","title":"Functions for daily tasks ","text":"","code":"Email: tuhocr.com@gmail.com  Website: www.tuhocr.com  Facebook: www.facebook.com/tuhocr  Fanpage: www.facebook.com/Huong.Dan.Tu.Hoc.R  Group: www.facebook.com/groups/tuhocr  Youtube: https://www.youtube.com/@tuhocr"},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"/reference/clean_spss.html","id":null,"dir":"Reference","previous_headings":"","what":"Làm sạch file SPSS (.sav) thành data frame — clean_spss","title":"Làm sạch file SPSS (.sav) thành data frame — clean_spss","text":"Function này giúp import file SPSS (.sav) vào trong R. Sau đó các cột có label sẽ được chuyển thành factor, cũng như làm sạch các thông tin liên quan đến SPSS để ta có data frame sạch. Báo lỗi function: tuhocr.com@gmail.com","code":""},{"path":"/reference/clean_spss.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Làm sạch file SPSS (.sav) thành data frame — clean_spss","text":"","code":"clean_spss(input_data, ...)"},{"path":"/reference/clean_spss.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Làm sạch file SPSS (.sav) thành data frame — clean_spss","text":"input_data File SPSS (.sav) ... Tham số này của lệnh haven::read_sav()","code":""},{"path":"/reference/clean_spss.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Làm sạch file SPSS (.sav) thành data frame — clean_spss","text":"","code":"# Các bạn download các file SPSS (.sav) example này về. # http://spss.allenandunwin.com.s3-website-ap-southeast-2.amazonaws.com/data-files.html # Thực hiện dòng lệnh. Ta thu được data frame sạch để phân tích dữ liệu. data <- clean_spss(\"https://tuhocr.netlify.app/experim.sav\") head(data[, 1:6]) #>   id  sex age               group fost1 confid1 #> 1  4 male  23 confidence building    50      15 #> 2 10 male  21 confidence building    47      14 #> 3  9 male  25        maths skills    44      12 #> 4  3 male  30        maths skills    47      11 #> 5 12 male  45 confidence building    46      16 #> 6 11 male  22        maths skills    39      13 str(data) #> 'data.frame':\t30 obs. of  18 variables: #>  $ id      : num  4 10 9 3 12 11 6 5 8 13 ... #>  $ sex     : Factor w/ 2 levels \"male\",\"female\": 1 1 1 1 1 1 1 1 1 1 ... #>  $ age     : num  23 21 25 30 45 22 22 26 23 21 ... #>  $ group   : Factor w/ 2 levels \"maths skills\",..: 2 2 1 1 2 1 2 1 2 1 ... #>  $ fost1   : num  50 47 44 47 46 39 32 44 40 47 ... #>  $ confid1 : num  15 14 12 11 16 13 21 17 22 20 ... #>  $ depress1: num  44 42 40 43 44 43 37 46 37 50 ... #>  $ fost2   : num  48 45 39 42 45 40 33 37 40 45 ... #>  $ confid2 : num  16 15 18 16 16 20 22 20 23 25 ... #>  $ depress2: num  44 42 40 43 45 42 36 47 37 48 ... #>  $ fost3   : num  45 44 36 41 43 39 32 32 40 46 ... #>  $ confid3 : num  14 18 19 20 20 22 23 26 26 27 ... #>  $ depress3: num  40 40 38 43 43 38 35 42 35 46 ... #>  $ exam    : num  52 55 58 60 58 62 59 70 60 70 ... #>  $ mah_1   : num  0.57 1.659 3.54 2.454 0.944 ... #>  $ DepT1gp2: Factor w/ 2 levels \"not depressed\",..: 1 1 1 1 1 1 1 2 1 2 ... #>  $ DepT2Gp2: Factor w/ 2 levels \"not depressed\",..: 1 1 1 1 2 1 1 2 1 2 ... #>  $ DepT3gp2: Factor w/ 2 levels \"not depressed\",..: 1 1 1 1 1 1 1 1 1 2 ..."},{"path":"/reference/clean_stata.html","id":null,"dir":"Reference","previous_headings":"","what":"Làm sạch file Stata (.dta) thành data frame — clean_stata","title":"Làm sạch file Stata (.dta) thành data frame — clean_stata","text":"Function này giúp import file Stata (.dta) vào trong R. Sau đó các cột có label sẽ được chuyển thành factor, cũng như làm sạch các thông tin liên quan đến Stata để ta có data frame sạch. Báo lỗi function: tuhocr.com@gmail.com","code":""},{"path":"/reference/clean_stata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Làm sạch file Stata (.dta) thành data frame — clean_stata","text":"","code":"clean_stata(input_data, ...)"},{"path":"/reference/clean_stata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Làm sạch file Stata (.dta) thành data frame — clean_stata","text":"input_data File Stata (.dta) ... Tham số này của lệnh haven::read_dta()","code":""},{"path":"/reference/clean_stata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Làm sạch file Stata (.dta) thành data frame — clean_stata","text":"","code":"# Các bạn download các file Stata (.dta) example này về. # https://www.principlesofeconometrics.com/stata.htm # Thực hiện dòng lệnh. Ta thu được data frame sạch để phân tích dữ liệu. data <- clean_stata(\"https://tuhocr.netlify.app/housing.dta\") head(data) #>   house    ir #> 1  1711 13.08 #> 2  1632 12.92 #> 3  1800 13.17 #> 4  1821 13.20 #> 5  1680 12.91 #> 6  1676 12.22 str(data) #> 'data.frame':\t252 obs. of  2 variables: #>  $ house: num  1711 1632 1800 1821 1680 ... #>  $ ir   : num  13.1 12.9 13.2 13.2 12.9 ..."},{"path":"/reference/extract_faostat.html","id":null,"dir":"Reference","previous_headings":"","what":"Trích xuất dữ liệu nông sản từ FAOSTAT theo loại cây trồng — extract_faostat","title":"Trích xuất dữ liệu nông sản từ FAOSTAT theo loại cây trồng — extract_faostat","text":"Function này giúp trích xuất dữ liệu nông sản từ FAOSTAT theo loại cây trồng (những item có chứa thông tin `production` và `area_harvested` trong dataset). Hướng dẫn chi tiết: https://tuhocr.github.io/articles/filter_faostat.html Báo lỗi function: tuhocr.com@gmail.com","code":""},{"path":"/reference/extract_faostat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trích xuất dữ liệu nông sản từ FAOSTAT theo loại cây trồng — extract_faostat","text":"","code":"extract_faostat(input_rds, input_region, input_item)"},{"path":"/reference/extract_faostat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trích xuất dữ liệu nông sản từ FAOSTAT theo loại cây trồng — extract_faostat","text":"input_rds File data frame `QCL` chứa dữ liệu nông sản của FAOSTAT input_region File data frame country region của FAOSTAT input_item Tên loại nông sản cần trích xuất","code":""},{"path":"/reference/extract_faostat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Trích xuất dữ liệu nông sản từ FAOSTAT theo loại cây trồng — extract_faostat","text":"","code":"# Sử dụng package FAOSTAT để download dataset về máy tính. # Ở đây là dataset ở thời điểm 3/2023 dùng làm ví dụ.  # crop_production_all_data <- system.file(\"extdata\", # \"crop_production_all_data.rds\", package = \"tuhocr\") # df_1 <- readRDS(crop_production_all_data)  # FAOSTAT_data_2023 <- system.file(\"extdata\", # \"FAOSTAT_data_3-21-2023.csv\", package = \"tuhocr\") # df_2 <- read.csv(FAOSTAT_data_2023)  # Thực hiện dòng lệnh sẽ thu được danh sách các quốc gia # sản xuất cà phê trên thế giới được sắp xếp theo # năng suất và năm.  # coffee_data <- extract_faostat(input_rds = df_1, # input_region = df_2, # input_item = \"Coffee, green\")  # head(coffee_data) # str(coffee_data)"},{"path":"/reference/filter_faostat.html","id":null,"dir":"Reference","previous_headings":"","what":"Trích xuất dữ liệu nông sản từ FAOSTAT theo thứ hạng và thời gian — filter_faostat","title":"Trích xuất dữ liệu nông sản từ FAOSTAT theo thứ hạng và thời gian — filter_faostat","text":"Function này giúp trích xuất dữ liệu nông sản cây trồng từ FAOSTAT theo thứ hạng và thời gian. Hướng dẫn chi tiết: https://tuhocr.github.io/articles/filter_faostat.html Báo lỗi function: tuhocr.com@gmail.com","code":""},{"path":"/reference/filter_faostat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trích xuất dữ liệu nông sản từ FAOSTAT theo thứ hạng và thời gian — filter_faostat","text":"","code":"filter_faostat(item_filter, data_rds, data_region, rank_filter = \"all\", year_filter = \"all\")"},{"path":"/reference/filter_faostat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trích xuất dữ liệu nông sản từ FAOSTAT theo thứ hạng và thời gian — filter_faostat","text":"data_rds File data frame `QCL` chứa dữ liệu nông sản của FAOSTAT data_region File data frame country region của FAOSTAT item_filter Tên loại nông sản cần trích xuất rank_filter Thứ hạng các quốc gia sản xuất nông sản. Mặc định \"\" là lấy toàn bộ quốc gia year_filter Năm sản xuất nông sản. Mặc định \"\" là lấy toàn bộ các năm","code":""},{"path":"/reference/filter_faostat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Trích xuất dữ liệu nông sản từ FAOSTAT theo thứ hạng và thời gian — filter_faostat","text":"","code":"# Sử dụng package FAOSTAT để download dataset về máy tính. # Ở đây là dataset ở thời điểm 3/2023 dùng làm ví dụ.  # crop_production_all_data <- system.file(\"extdata\", # \"crop_production_all_data.rds\", package = \"tuhocr\") # df_1 <- readRDS(crop_production_all_data)  # FAOSTAT_data_2023 <- system.file(\"extdata\", # \"FAOSTAT_data_3-21-2023.csv\", package = \"tuhocr\") # df_2 <- read.csv(FAOSTAT_data_2023)  # Thực hiện dòng lệnh sẽ thu được danh sách các quốc gia # sản xuất cà phê trên thế giới được sắp xếp theo # thứ hạng và năm.  # coffee_data <- filter_faostat(data_rds = df_1, # data_region = df_2, # item_filter = \"Coffee, green\", # rank_filter = 1:10, # year_filter = 2021)  # head(coffee_data) # str(coffee_data)"},{"path":"/reference/tuhocr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Functions for daily tasks — tuhocr-package","title":"Functions for daily tasks — tuhocr-package","text":"Package này tập hợp các function giúp giải quyết công việc xử lý dữ liệu thường ngày. Để ứng dụng R có hiệu quả vào công việc, thân mời bạn tham gia khóa học R ở www.tuhocr.com giúp trang bị kiến thức R vững chắc.","code":""},{"path":[]},{"path":"/reference/tuhocr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Functions for daily tasks — tuhocr-package","text":"Duc Nguyen | Founder tuhocr.com Chuyên đào tạo kỹ năng xử lý dữ liệu sử dụng phần mềm R. Maintainer: Duc Nguyen <tuhocr.com@gmail.com>","code":""},{"path":"/news/index.html","id":"tuhocr-013","dir":"Changelog","previous_headings":"","what":"tuhocr 0.1.3","title":"tuhocr 0.1.3","text":"Tạo function extract_faostat() và filter_faostat() để trích xuất dữ liệu cây trồng từ FAOSTAT.","code":""},{"path":"/news/index.html","id":"tuhocr-012","dir":"Changelog","previous_headings":"","what":"tuhocr 0.1.2","title":"tuhocr 0.1.2","text":"Tạo function clean_stata() Làm sạch file Stata (.dta) thành data frame.","code":""},{"path":"/news/index.html","id":"tuhocr-011","dir":"Changelog","previous_headings":"","what":"tuhocr 0.1.1","title":"tuhocr 0.1.1","text":"Tạo tutorial hack1 tương ứng https://tuhocr.shinyapps.io/hack1/. Để chạy file này trên RStudio, bạn sử dụng lệnh learnr::run_tutorial(name = \"hack1\", package = \"tuhocr\")","code":""},{"path":"/news/index.html","id":"tuhocr-010","dir":"Changelog","previous_headings":"","what":"tuhocr 0.1.0","title":"tuhocr 0.1.0","text":"Tạo function clean_spss() Làm sạch file SPSS (.sav) thành data frame.","code":""}]
